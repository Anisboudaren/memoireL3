<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>admin dashboard</title>
		<style>
			.container {
				display: flex;
				height: 200px;
			}

			.sidebar {
				width: 200px;
				background-color: #f1f1f1;
			}

			.content {
				flex-grow: 1;
				background-color: #ddd;
				height: 100vh;
				padding: 30px;
			}

			table {
				border-collapse: collapse;
				width: 100%;
			}

			th,
			td {
				border: 1px solid black;
				padding: 8px;
				text-align: left;
			}

			tr:nth-child(even) {
				background-color: #f2f2f2;
			}

			.button-container {
				display: flex;
				justify-content: center;
				margin-top: 10px;
			}

			.button {
				margin: 0 5px;
				padding: 5px 10px;
				background-color: #4caf50;
				color: white;
				border: none;
				cursor: pointer;
				border-radius: 4px;
			}

			/* Edit User Modal */
			#editPatientModal {
				display: none;
				position: fixed;
				z-index: 1;
				left: 0;
				top: 0;
				width: 100%;
				height: 100%;
				overflow: auto;
				background-color: rgba(0, 0, 0, 0.4);
			}

			.modal-content {
				background-color: #fefefe;
				margin: 15% auto;
				padding: 20px;
				border: 1px solid #888;
				width: 50%;
			}

			.close {
				color: #aaa;
				float: right;
				font-size: 28px;
				font-weight: bold;
				cursor: pointer;
			}

			.close:hover,
			.close:focus {
				color: black;
				text-decoration: none;
				cursor: pointer;
			}
		</style>
	</head>
	<body>
		<div class="container">
			<div class="sidebar"><%- include('../partials/sidebar.ejs') %></div>
			<div class="content">
				<table>
					<thead>
						<tr>
							<th>Index</th>
							<th>First Name</th>
							<th>Last Name</th>
							<th>Gender</th>
							<th>Date of Birth</th>
							<th>Address</th>
							<th>Phone Number</th>
							<th>Medical History</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						<% patients.forEach((patient, index) => { %>
						<tr>
							<td><%= index + 1 %></td>
							<td><%= patient.firstName %></td>
							<td><%= patient.lastName %></td>
							<td><%= patient.gender %></td>
							<td><%= new Date(patient.dateOfBirth).toLocaleDateString("en-GB", {day: "2-digit", month: "2-digit", year: "numeric"}) %></td>
							<td><%= patient.address %></td>
							<td><%= patient.phoneNumber %></td>
							<td><a href="#">download</a></td>
							<td>
								<div class="button-container">
									<button class="edit-button button" data-id="<%= patient._id %>">Edit</button>
									<button class="delete-button button" data-id="<%= patient._id %>">Delete</button>
								</div>
							</td>
						</tr>
						<% }); %>
					</tbody>
				</table>

				<div id="editPatientModal" class="modal">
					<div class="modal-content">
						<span class="close">&times;</span>
						<h2>Edit Patient</h2>
						<form id="editPatientForm">
							<div>
								<label for="firstName">First Name:</label>
								<input type="text" id="firstName" name="firstName" />
							</div>
							<div>
								<label for="lastName">Last Name:</label>
								<input type="text" id="lastName" name="lastName" />
							</div>
							<div>
								<label for="gender">Gender:</label>
								<input type="text" id="gender" name="gender" />
							</div>
							<div>
								<label for="dateOfBirth">Date of Birth:</label>
								<input type="text" id="dateOfBirth" name="dateOfBirth" />
							</div>
							<div>
								<label for="address">Address:</label>
								<input type="text" id="address" name="address" />
							</div>
							<div>
								<label for="phoneNumber">Phone Number:</label>
								<input type="text" id="phoneNumber" name="phoneNumber" />
							</div>
							<div>
								<label for="medicalHistory">Medical History:</label>
								<textarea id="medicalHistory" name="medicalHistory"></textarea>
							</div>
							<button type="submit">Save</button>
						</form>
					</div>
				</div>

				<script>
					// Edit Patient Modal
					const editPatientModal = document.getElementById('editPatientModal');
					const editPatientForm = document.getElementById('editPatientForm');
					const closeBtn = editPatientModal.querySelector('.close');
					const saveBtn = document.getElementById('saveEdit');
					// Event listener for edit button
					const editButtons = document.querySelectorAll('.edit-button');
					editButtons.forEach((button) => {
						button.addEventListener('click', () => {
							const patientId = button.getAttribute('data-id');

							// Perform GET request to retrieve patient data
							// Replace the following code with your actual request implementation
							fetch(`/api/patient/get/${patientId}`, {
								method: 'GET',
								// Add other request options as needed
							})
								.then((response) => {
									if (response.ok) {
										return response.json();
									} else {
										throw new Error('Failed to retrieve patient data');
									}
								})
								.then((patientData) => {
									// Pre-fill the form with patient data
									document.getElementById('firstName').value = patientData.patient.firstName;
									document.getElementById('lastName').value = patientData.patient.lastName;
									document.getElementById('gender').value = patientData.patient.gender;
									document.getElementById('dateOfBirth').value = new Date(patientData.patient.dateOfBirth).toLocaleDateString('en-GB', {
										day: '2-digit',
										month: '2-digit',
										year: 'numeric',
									});
									document.getElementById('address').value = patientData.patient.address;
									document.getElementById('phoneNumber').value = patientData.patient.phoneNumber;
									document.getElementById('medicalHistory').value = patientData.patient.medicalHistory;

									// Show the edit patient modal
									editPatientModal.style.display = 'block';
								})
								.catch((error) => {
									// Handle the error as needed
									console.log(error);
								});
						});
					});

					// Close the modal when the close button is clicked
					closeBtn.addEventListener('click', () => {
						editPatientModal.style.display = 'none';
					});

					// Event listener for delete button
					const deleteButtons = document.querySelectorAll('.delete-button');
					deleteButtons.forEach((button) => {
						button.addEventListener('click', () => {
							const patientId = button.getAttribute('data-id');
							// Perform DELETE request with the patientId
							// Replace the following code with your actual request implementation
							fetch(`/api/patient/delete/${patientId}`, {
								method: 'DELETE',
								// Add other request options as needed
							})
								.then((response) => {
									if (response.ok) {
										// Reload the page after a successful DELETE request
										console.log(patientId + ' has been deleted');
										location.reload();
									}
								})
								.catch((error) => {
									// Handle the error as needed
									console.log(error);
								});
						});
					});
				</script>
			</div>
		</div>

		<style>
			.fromContainer {
				position: fixed;
				width: 400px;
				margin: 0 auto;
				padding: 20px;
				background-color: #949494a1;
			}

			h2 {
				text-align: center;
			}

			form {
				display: flex;
				flex-direction: column;
			}

			label {
				font-weight: bold;
				margin-bottom: 5px;
			}

			input[type='text'],
			input[type='email'],
			textarea {
				padding: 8px;
				margin-bottom: 10px;
				border-radius: 4px;
				border: 1px solid #ccc;
			}

			textarea {
				resize: vertical;
				height: 80px;
			}

			button[type='submit'] {
				padding: 10px 20px;
				background-color: #4caf50;
				color: white;
				border: none;
				cursor: pointer;
				border-radius: 4px;
			}
		</style>
	</body>
</html>
